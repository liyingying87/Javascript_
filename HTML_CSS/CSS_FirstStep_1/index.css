h1 {
    color: red;
}
p, li {
    /*color: green;*/
}
li {
    /*list-style-type: none;*/
    /*  无序列表 <ul> 中的项目符号移除 */
    list-style-type: "\1F44D";

}
/*.special{*/
/*    list-style-type: none;*/
/*    color: orange;*/
/*    font-weight: bold;*/
/*}*/
/*选中每个special类的li元素*/
li.special{
    color: orange;
    font-weight: bold;
}
/*仅选择嵌套在<li> 元素内的<em>我们可以使用一个称为
包含选择符的选择器，它只是单纯地在两个选择器之间加上一个空格。*/
li em{
    color: rebeccapurple;
}
/*在HTML文档中设置直接出现在标题后面并且与标题具有相同层级的段落样式，为此需在两个选择器之间添加一个 + 号 (成为
相邻选择符) */
h1+p{
    font-size: 200%;
}
p span{
    color: #c13832;
}
/*在这篇教程中我们最后要看的一种修改样式的方法就是根据标签的状态确定样式
当我们修改一个链接的样式时我们需要定位（针对） <a> （锚）标签。取决于是否是未访问的、访问过的、被鼠标悬停的、被键盘定位的，亦或是正在被点击当中的状态，这个标签有着不同的状态。你可以使用CSS去定位或者说针对这些不同的状态进行修饰——下面的CSS代码使得没有被访问的链接颜色变为粉色、访问过的链接变为绿色。
*/
a:link{
    color: #DCC48E;
}
/*下面的CSS代码使得没有被访问的链接颜色变为粉色、访问过的链接变为绿色。 这里有些奇怪,为啥一直都是绿色的?*/
a:visited{
    color: green;
}
a:hover{
    text-decoration: none;
}
/*将选择子和关系选择器组合起来*/
/* selects any <span> that is inside a <p>, which is inside an <article>  */
article p span { ... }

/* selects any <p> that comes directly after a <ul>, which comes directly after an <h1>  */
h1 + ul + p { ... }
body h1 + p .special {
    color: yellow;
    background-color: black;
    padding: 5px;
}
/*三种方式 外部 头部还有内联样式(最不好维护)*/
/*选择器
每个CSS规则都以一个选择器或一组选择器为开始，去告诉浏览器这些规则应该应用到哪些元素上。
*/
/*看test中
CSS语言有规则来控制在发生碰撞时哪条规则将获胜--这些规则称为级联规则和专用规则。
在下面的代码块中，我们为p选择器定义了两个规则，但是段落最后是蓝色的。
这是因为将其设置为蓝色的声明将出现在样式表的后面，而稍后的样式将覆盖以前的样式。这就是起作用的级联。
在我们使用类选择器和元素选择器的早期块中，类将获胜，使得段落变红--即使它出现在样式表的前面。一个类被描述为比元素选择器更具体，或者具有更多的特异性，所以它获胜了。
1.类战胜其他
2.平级里后面的赢
*/
/*重要的是要记住，在css中，属性和值都是区分大小写的。*/
