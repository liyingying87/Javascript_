.main {
    color: rebeccapurple;
    border: 2px solid #ccc;
    padding: 1em;
}

.special {
    color: black;
    font-weight: bold;
}
/*理解继承*/
/*控制继承
CSS 为控制继承提供了四个特殊的通用属性值。每个css属性都接收这些值。
inherit
设置该属性会使子元素属性和父元素相同。实际上，就是 "开启继承".
initial
设置属性值和浏览器默认样式相同。如果浏览器默认样式中未设置且该属性是自然继承的，那么会设置为 inherit 。
unset
将属性重置为自然值，也就是如果属性是自然继承那么就是 inherit，否则和 initial一样
还有一个新的属性, revert (en-US)， 只有很少的浏览器支持。
*/
body {
    color: green;
}

.myclass-1 a {
    /*设置该属性会使子元素属性和父元素相同。实际上，就是 "开启继承".*/
    color: inherit;
}

.myclass-2 a {
    /*设置属性值和浏览器默认样式相同。如果浏览器默认样式中未设置且该属性是自然继承的，那么会设置为 inherit 。*/
    color: initial;
}

.myclass-3 a {
    /*将属性重置为自然值，也就是如果属性是自然继承那么就是 inherit，否则和 initial一样*/
    color: unset;
}

blockquote{
    background-color: #c13832;
    border: 2px solid green;
}
.fix-this{
    /*all 属性可以是继承值中的任意一个
    这是一种撤销对样式所做更改的简便方法，以便回到之前已知的起点。*/
    all: inherit;
}
/*一种常见的做法是给基本元素定义通用样式，然后给不同的元素创建对应的类。*/
h2{
    color: #DCC48E;
    font-size: 2em;
    font-family: Georgia, 'Times New Roman', Times, serifr;
}
.small{
    font-size: 1em ;
}
.bright{
    color: rebeccapurple;
}
/*来看看浏览器如何计算优先级。我们已经知道一个元素选择器比类选择器的优先级更低会被其覆盖。本质上，不同类型的选择器有不同的分值
把这些分数相加就得到特定选择器的权重，然后就可以进行匹配。
一个选择器的优先级可以说是由四个部分相加（分量），可以认为是个十百千 四位数的四个位数：
千位数：如果声明在style属性，内联样式应该得一分，这样的声明没有选择器，所以他的总分是1000
百位数：选择器中包含id选择器得一分
十位数:选择器中包含类选择器，属性选择器  li[class~="a"]会匹配一个a类，不过也可以匹配一列用空格分开、包含a类的值，它选中了第二和第三项。
      或者伪类【现在还是不是很了解，等后面看吧】 伪类就是开头为冒号的关键字：:pseudo-class-name  则该位得一分。
个位数：选择器中包含元素、伪元素选择器则该位得一分。
*/

/* specificity: 0101 */
#outer a{
    background-color: lightcoral;
}

/* specificity: 0201 */
#outer #inner a {
    background-color: blue;
}
/* 前面两个选择器都是链接背景颜色的样式 — 第二个赢了使得背景变成蓝色因为它多了一个ID选择器：优先级 201 vs. 101。 */

/* specificity: 0104 */
#outer div ul li a {
    color: yellow;
}

/* specificity: 0113 */
#outer div ul .nav a {
    color: white;
}
/* 第三四个选择器都是链接文本颜色样式 — 第二个（第四个）赢了使得文本变成白色因为它虽然少一个元素选择器，但是多了一个类选择器，多了9分。所以优先级是 113 vs. 104。 */

/* specificity: 0024 */
div div li:nth-child(2) a:hover {
    border: 10px solid black;
}


/* specificity: 0023 */
div li:nth-child(2) a:hover {
    border: 10px dashed black;
}

/* specificity: 0033 */
div div .nav:nth-child(2) a:hover {
    border: 10px double black;
}

a {
    display: inline-block;
    line-height: 40px;
    font-size: 20px;
    text-decoration: none;
    text-align: center;
    width: 200px;
    margin-bottom: 10px;
}

ul {
    padding: 0;
}

li {
    list-style-type: none;
}            
/* !important
有一个特殊的 CSS 可以用来覆盖所有上面所有优先级计算，不过需要很小心的使用 — !important。 */
/*但是，强烈建议除了非常情况不要使用它。*/
#winning {
    background-color: red;
    border: 1px solid black;
}
    
.better {
    background-color: gray;
    /* border: 1px solid lightsalmon; */
    border: none !important
    /* 即使这个优先级低也使用这个值 */
}
    
p {
    background-color: blue;
    color: white;
    padding: 5px;
}           
    