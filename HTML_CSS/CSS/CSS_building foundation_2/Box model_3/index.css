/*CSS盒子模型本质上就是一个盒子，封装周围的HTML元素，包括：边框border、外边距margin、内边距padding和实际内容content*/
/*边框 border
三部分组成：边框的宽度、边框的样式、边框的颜色  border : border-width （单位是px）|| border-style || border-color
边框会额外增加盒子的实际大小。因此我们有两种方式解决：
①测量盒子大小的时候，不测量边框
②如果测量了边框，就用width和height减去边框宽度
*/
/*内边距padding 即边框与内容的距离
padding 属性（简写属性）可以有一到四个值
    一个值表示上下左右都是这个值
    两个值表示上下 和 左右的值
    三个值表示上  左右   下
    四个 上 右 下 左
当我们给盒子指定 padding 值之后，发生了 2 件事情：
1. 内容和边框有了距离，添加了内边距。
2. padding影响了盒子实际大小。
也就是说，如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。
为了保证盒子和内容大小一致，就用width和height减去多出来的内边距大小。
*/
/*外边距margin  设置外边距用于控制盒子和盒子之间的距离
外边距可以使得盒子水平居中，但是要满足盒子必须是指定了宽度并且盒子的左右外边距都设置成了auto
 margin-left: auto; margin-right: auto;
 margin: auto;
 margin: 0 auto;
以上三种均可使得块级元素水平居中
行内元素或者行内块元素水平居中给其父元素添加 text-align:center 即可。

外边距合并
相邻块元素垂直外边距的合并：
    当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有
    上外边距 margin-top ，则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。取两个值中的
    较大者这种现象被称为相邻块元素垂直外边距的合并。
嵌套块元素垂直外边距的塌陷：
    对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。
*/
.container{
    width: 200px;
    height: 200px;
    background-color: #DCC48E;
    padding: 20px;
    border: 3px solid blue;
    margin: 0 auto;
}
/*块级盒子（Block box） 和 内联盒子（Inline box）
这两种盒子会在页面流和元素之间的关系方面表现出不同的行为
区别如下：
块级盒子：①盒子会在内联的方向上扩展并占据父容器在该方向上的所有可用空间，在绝大多多数情况下意味着盒子会和父容器一样宽
②每个盒子都会换行
③width和height可以发挥作用
④内边距（padding）, 外边距（margin） 和 边框（border） 会将其他元素从当前盒子周围“推开”
除非特殊指定，诸如标题(<h1>等)和段落(<p>)默认情况下都是块级的盒子。
内联盒子:
①盒子不会产生换行。
②width 和 height 属性将不起作用。
③垂直方向的内边距、外边距以及边框会被应用但是  不会  把其他处于 inline 状态的盒子推开。
④水平方向的内边距、外边距以及边框会被应用且  会  把其他处于 inline 状态的盒子推开。
用做链接的 <a> 元素、 <span>、 <em> 以及 <strong> 都是默认处于 inline 状态的。
我们通过对盒子display 属性的设置，比如 inline 或者 block ，来控制盒子的外部显示类型。
*/
.container1 p,.container1 ul{
    border: 2px solid rebeccapurple;
    padding: 0.5em;
}
.block,.container1 li{
    border: 2px solid blue;
    padding: .5em;
}
.container1 ul{
    list-style: none;
    display: flex;
}
.block{
    display: block;
}
.container2 p,.container2 ul{
    border: 3px solid pink;
}
.container2 span,.container2 li{
    border: 2px solid blue;
}
.container2 ul{
    display: inline-flex;
    list-style: none;
    padding: 0;
}
.inline{
    display: inline;
}
