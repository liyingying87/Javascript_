h1 {
    color: red;
}
p, li {
    /*color: green;*/
}
li {
    /*list-style-type: none;*/
    /*  无序列表 <ul> 中的项目符号移除 */
    list-style-type: "\1F44D";

}
/*.special{*/
/*    list-style-type: none;*/
/*    color: orange;*/
/*    font-weight: bold;*/
/*}*/
/*选中每个special类的li元素*/
li.special{
    color: orange;
    font-weight: bold;
}
/*仅选择嵌套在<li> 元素内的<em>我们可以使用一个称为
包含选择符的选择器，它只是单纯地在两个选择器之间加上一个空格。*/
li em{
    color: rebeccapurple;
}
/*在HTML文档中设置直接出现在标题后面并且与标题具有相同层级的段落样式，为此需在两个选择器之间添加一个 + 号 (成为
相邻选择符) */
h1+p{
    font-size: 200%;
}
p span{
    color: #c13832;
}
/*在这篇教程中我们最后要看的一种修改样式的方法就是根据标签的状态确定样式
当我们修改一个链接的样式时我们需要定位（针对） <a> （锚）标签。取决于是否是未访问的、访问过的、被鼠标悬停的、被键盘定位的，亦或是正在被点击当中的状态，这个标签有着不同的状态。你可以使用CSS去定位或者说针对这些不同的状态进行修饰——下面的CSS代码使得没有被访问的链接颜色变为粉色、访问过的链接变为绿色。
*/
a:link{
    color: #DCC48E;
}
/*下面的CSS代码使得没有被访问的链接颜色变为粉色、访问过的链接变为绿色。 这里有些奇怪,为啥一直都是绿色的?*/
a:visited{
    color: green;
}
a:hover{
    text-decoration: none;
}
/*将选择子和关系选择器组合起来*/
/* selects any <span> that is inside a <p>, which is inside an <article>  */
article p span { ... }

/* selects any <p> that comes directly after a <ul>, which comes directly after an <h1>  */
h1 + ul + p { ... }
body h1 + p .special {
    color: yellow;
    background-color: black;
    padding: 5px;
}
/*三种方式 外部 头部还有内联样式(最不好维护)*/
/*选择器
每个CSS规则都以一个选择器或一组选择器为开始，去告诉浏览器这些规则应该应用到哪些元素上。
*/
/*看test中
CSS语言有规则来控制在发生碰撞时哪条规则将获胜--这些规则称为级联规则和专用规则。
在下面的代码块中，我们为p选择器定义了两个规则，但是段落最后是蓝色的。
这是因为将其设置为蓝色的声明将出现在样式表的后面，而稍后的样式将覆盖以前的样式。这就是起作用的级联。
在我们使用类选择器和元素选择器的早期块中，类将获胜，使得段落变红--即使它出现在样式表的前面。一个类被描述为比元素选择器更具体，或者具有更多的特异性，所以它获胜了。
1.类战胜其他
2.平级里后面的赢
*/
/*重要的是要记住，在css中，属性和值都是区分大小写的。*/


/*函数*/
/*一个例子是calc()函数。这个函数允许您在CSS中进行简单的计算*/
.outer {
    border: 5px solid black;
}
.box {
    padding: 10px;
    width: calc(90% - 30px);
    /*一个函数由函数名和一些括号组成，其中放置了该函数的允许值。在上面的calc()示例中，我要求此框的宽度为包含块宽度的90%，减去30像素。*/
    background-color: rebeccapurple;
    color: white;
}
.box2{
    color: cyan;
    margin: 30px;
    width: 100px;
    height: 100px;
    background-color: mediumpurple;
    /*背景色*/
    /*背景图*/
    background-image:
            /*渐变色*/
            linear-gradient(rgba(0, 0, 255, 0.5), rgba(255, 255, 0, 0.5)),
            url("dove.png");
    /*另一个函数 rotate  transform属性允许你旋转，缩放，倾斜或平移给定元素*/
    transform: rotate(0.8turn)
    /*transform: matrix3d(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);*/
}
/*@规则
您将遇到的最常见的 @rules 之一是@media，它允许您使用 媒体查询 来应用CSS，仅当某些条件成立(例如，当屏幕分辨率高于某一数量，或屏幕宽度大于某一宽度时)。
*/
/*我们将给 <body> 元素一个粉红色的背景色。但是，我们随后使用@media创建样式表的一个部分，该部分仅适用于视口大于30em的浏览器。如果浏览器的宽度大于30em，则背景色将为蓝色。*/
body {
    background-color: blue;
}

@media (min-width: 30em) {
    body {
        background-color: pink;
    }
}
/*速记属性
一些属性，如 font, background, padding, border, and margin 等属性称为速记属性--这是因为它们允许您在一行中设置多个属性值，从而节省时间并使代码更整洁。*/
/*padding CSS 简写属性控制元素所有四条边的内边距区域。*/
/*padding: 10px 15px 15px 5px;*/
/*上面和下面是等价的*/
/*padding-top: 10px;*/
/*padding-right: 15px;*/
/*padding-bottom: 15px;*/
/*padding-left: 5px;*/
h4 {
    background-color: cornflowerblue;
    /*上下内边距是5像素,左右内边距是10像素*/
    padding: 2px 3px;
}
h3 {
    background-color: cyan;
    padding: 110px 50px 50px 110px;
}
